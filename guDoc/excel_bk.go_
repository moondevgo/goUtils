// [Excelize](https://xuri.me/excelize/ko/)

package main

// go get github.com/xuri/excelize

import (
	"fmt"

	excelize "github.com/xuri/excelize/v2"
)

func OpenXlsx(path string) *excelize.File {
	f, err := excelize.OpenFile(path)
	if err != nil {
		fmt.Println(err)
		return nil
	}
    return f
}

func CloseXlsx(f *excelize.File) {
		if err := f.Close(); err != nil {
			fmt.Println(err)
		}
}

func GetCell(f *excelize.File, sheetName, cellName string) string {
	cell, err := f.GetCellValue(sheetName, cellName)
	if err != nil {
		fmt.Println(err)
		return ""
	}
	// fmt.Println(cell)
  return cell
}

func GetSheet(f *excelize.File, sheetName string) [][]string {
	rows, err := f.GetRows(sheetName)
	if err != nil {
		fmt.Println(err)
		return nil
	}
  return rows
}



func main() {
	path := `C:\Dev\inGo\_temp\XingApiDllSpec.xlsx`
	f := OpenXlsx(path)
	defer CloseXlsx(f)
	cell := GetCell(f, "functions", "B2")
	fmt.Println(cell)
	rows := GetSheet(f, "functions")
	fmt.Printf("%v", rows)
	// // 워크시트에서 지정 된 셀의 값을 가져옵니다
	// cell, err := f.GetCellValue("functions", "B2")
	// if err != nil {
	// 	fmt.Println(err)
	// 	return
	// }
	// fmt.Println(cell)
	// // Sheet1 의 모든 셀 가져오기
	// rows, err := f.GetRows("functions")
	// if err != nil {
	// 	fmt.Println(err)
	// 	return
	// }
	// for _, row := range rows {
	// 	for _, colCell := range row {
	// 		fmt.Print(colCell, "\t")
	// 	}
	// 	fmt.Println()
	// }
}
