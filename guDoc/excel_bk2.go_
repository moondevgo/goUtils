package main

import (
	"fmt"

	excelize "github.com/xuri/excelize/v2"
)

type Excel struct {
	FilePath  string
	SheetName string
}

type Sheets interface {
	SetFile() string
	SetSheet() string
	Open() *excelize.File
	// Close() nil
	Read() string
	Write() bool
}

func (e *Excel) SetFile(filePath string) string {
	e.FilePath = filePath
	return filePath
}

func (e *Excel) SetSheet(sheetName string) string {
	e.SheetName = sheetName
	return sheetName
}

func (e *Excel) Open() *excelize.File {
	f, err := excelize.OpenFile(e.FilePath)
	if err != nil {
		fmt.Println(err)
	}
	return f
}

func (e *Excel) Read() [][]string {
	f, err := excelize.OpenFile(e.FilePath)
	if err != nil {
		fmt.Println(err)
	}
	defer f.Close()
	rows, err := f.GetRows(e.SheetName)
	if err != nil {
		fmt.Println(err)
		return nil
	}
	return rows
}

func (e *Excel) Write() bool {
	f := excelize.NewFile()
	index := f.NewSheet(e.SheetName)
	f.SetCellValue(e.SheetName, "A2", "Hello World.")
	f.SetCellValue(e.SheetName, "B2", "100")
	f.SetActiveSheet(index)
	if err := f.SaveAs(e.FilePath); err != nil {
		fmt.Println(err)
		return false
	}
	return true
}

func main() {
	e := Excel{
		`C:\Dev\inGo\_temp\XingApiDllSpec.xlsx`,
		"functions",
	}
	rows := e.Read()
	fmt.Printf("%v", rows)

	e.SetFile(`C:\Dev\inGo\_temp\test1.xlsx`)
	f := e.Open()
	fmt.Printf("%v", f)
	// e := Excel{
	//     `C:\Dev\inGo\_temp\test1.xlsx`,
	//     "test",
	// }
	// ok := e.Write()
	// fmt.Printf("%v", ok)

}
